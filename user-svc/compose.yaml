services:
  kafka-console:
    profiles: ['dev','all']
    depends_on:
      - kafka
    networks: [ dev ]
    ports:
      - "6969:8080"
    environment:
      - KAFKA_BROKERS=kafka-svc:9092
    image: docker.redpanda.com/redpandadata/console:latest
  zookeeper:
    profiles: ['dev','all']
    container_name: zookeeper
    volumes:
      - var-lib-zookeeper-data:/var/lib/zookeeper/data
    image: confluentinc/cp-zookeeper:7.4.6
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181"
    networks: [ dev ]
  kafka:
    profiles: ['dev','all']
    restart: unless-stopped
    networks:
      dev:
        ipv4_address: 172.21.0.11
    container_name: kafka
    hostname: kafka-svc
    image: confluentinc/cp-kafka:7.4.6
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka-svc:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  mongo-primary:
    profiles: ['dev','all']
    image: bitnami/mongodb:8.0.3-debian-12-r1
    container_name: mongo-primary
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicaSetKey123
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-root}
      - MONGODB_ROOT_USER=${MONGODB_ROOT_USER:-root}
      - MONGODB_USERNAME=${MONGODB_USERNAME:-dev}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD:-dev}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-user-svc}
      - MONGODB_REPLICA_SET_NAME=rs0
      - MONGODB_PORT_NUMBER=27017
    ports:
      - "27017:27017"
    networks: [dev]
#  mongodb:
#    image: bitnami/mongodb:8.0.3-debian-12-r1
#    profiles: ['dev','all']
#    hostname: usersvc-mongodb
#    networks:
#      dev:
#        ipv4_address: 172.21.0.10
#    volumes:
#      - bitnami-mongodb:/bitnami/mongodb
#    ports:
#      - "27017:27017"
#    environment:
#      - ALLOW_EMPTY_PASSWORD=yes
#      - MONGODB_USERNAME=${MONGODB_USERNAME:-dev}
#      - MONGODB_PASSWORD=${MONGODB_PASSWORD:-dev}
#      - MONGODB_DATABASE=${MONGODB_DATABASE:-user-svc}
#      - MONGODB_REPLICA_SET_MODE=primary
  user-svc:
    profiles: ['all']
    image: "ghcr.io/ngodat0103/se347-backend/user-svc:${TAG:-dev-latest}"
    environment:
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_DATA_MONGODB_HOST=mongo-primary
      - SPRING_DATA_MONGODB_USERNAME=${MONGODB_USERNAME:-dev}
      - SPRING_DATA_MONGODB_PASSWORD=${MONGODB_PASSWORD:-dev}
      - APP_VERSION=${TAG:-dev-latest}
      - SPRING_PROFILES_ACTIVE=dev
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVER_PORT: 5000
        SERVICE_NAME: usersvc
        VERSION: ${TAG:-dev-latest}
    networks: [ dev ]
    healthcheck:
     test: ["CMD","curl","http://localhost:5000/actuator/health"]
     interval: 3s
     timeout: 3s
     retries: 3
    depends_on:
      kafka:
        condition: service_started
      mongo-primary:
        condition: service_started
    ports:
      - "5000:5000"
volumes:
  var-lib-zookeeper-data:
    name: var-lib-zookeeper-data
  bitnami-mongodb:
    name: bitnami-mongodb
networks:
  dev:
    name: dev
    driver: bridge
    ipam:
      config:
        - subnet: "172.21.0.0/16"
          gateway: "172.21.0.1"