x-minio-credential: &minio-credential
   MINIO_API_SERVER: ${MINIO_API_SERVER:-http://minio-svc:9000}
   MINIO_SERVER_ACCESS_KEY: ${MINIO_SERVER_ACCESS_KEY:-minio-demo}
   MINIO_SERVER_SECRET_KEY: ${MINIO_SERVER_SECRET_KEY:-minio-demo}
   MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio-demo}
   MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio-demo}
services:
  minio:
    image: bitnami/minio:2024.10.13-debian-12-r0
    container_name: minio
    restart: always
    hostname: minio-svc
    healthcheck:
      test: ["CMD","curl","-f","http://127.0.0.1:9000/minio/health/live"]
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      <<: *minio-credential
    volumes:
      - minio-data:/bitnami/minio/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
  kafka-console:
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "6969:8080"
    environment:
      - KAFKA_BROKERS=kafka-svc:9092
    image: docker.redpanda.com/redpandadata/console:latest
  zookeeper:
    container_name: zookeeper
    volumes:
      - var-lib-zookeeper-data:/var/lib/zookeeper/data
    image: confluentinc/cp-zookeeper:7.4.6
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181"
  kafka:
    restart: unless-stopped
    container_name: kafka
    hostname: kafka-svc
    image: confluentinc/cp-kafka:7.4.6
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka-svc:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  redis:
    image: redis:alpine3.20
    ports:
      - "6379:6379"
  mongo-primary:
    image: bitnami/mongodb:8.0.3-debian-12-r1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "27017"]
      timeout: 1s
      retries: 3
      start_period: 5s
    container_name: mongo-primary
    volumes:
      - bitnami-mongodb:/bitnami/mongodb
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicaSetKey123
      - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-root}
      - MONGODB_ROOT_USER=${MONGODB_ROOT_USER:-root}
      - MONGODB_USERNAME=${MONGODB_USERNAME:-dev}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD:-dev}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-se347-backend}
      - MONGODB_REPLICA_SET_NAME=rs0
      - MONGODB_PORT_NUMBER=27017
    ports:
      - "27017:27017"
  se347-backend:
    mem_limit: 512m
    restart: unless-stopped
    #cpus: 1
    image: ${DOCKER_REGISTRY:-ghcr.io}/${IMAGE:-ngodat0103/se347-backend}:${IMAGE_VERSION:-dev-latest}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATA_MONGODB_HOST: mongo-primary
      SPRING_DATA_MONGODB_USERNAME: ${MONGODB_USERNAME:-dev}
      SPRING_DATA_MONGODB_PASSWORD: ${MONGODB_PASSWORD:-dev}
      SPRING_DATA_MONGODB_DATABASE: ${MONGODB_DATABASE:-se347-backend}
      APP_VERSION: ${IMAGE_VERSION:-dev-latest}
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATA_REDIS_HOST: redis
      <<: *minio-credential
    build:
      args:
        SERVER_PORT: 5000
        SERVICE_NAME: se347-backend
        VERSION: ${TAG:-dev-latest}
    healthcheck:
      test: [ "CMD","curl","http://localhost:5000/actuator/health/liveness" ]
      interval: 3s
      timeout: 3s
      retries: 3
    depends_on:
      minio:
        condition: service_healthy
      mongo-primary:
        condition: service_started
      redis:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
    ports:
      - "5000:5000"
volumes:
  var-lib-zookeeper-data:
      name: var-lib-zookeeper-data
  bitnami-mongodb:
    name: bitnami-mongodb
  minio-data:
    name: minio-data
