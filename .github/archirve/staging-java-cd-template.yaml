name: staging-java-pipeline
run-name: "Deploying to Staging in Kubernetes"
on:
  workflow_dispatch:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
        description: 'The name of the service'
      SERVICE_PORT:
        required: true
        type: number
        description: 'The port number of the service'
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
        description: 'The name of the service'
      SERVICE_PORT:
        required: true
        type: number
        description: 'The port number of the service'
jobs:
  build-and-push:
    name: Build and Push Docker image for PR
    runs-on: ubuntu-22.04
    steps:
      - name: Set up buildx
        uses: docker/setup-buildx-action@v3.7.1
      - name: docker login credential
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GHCR_READ_WRITE_PACKAGES_TOKEN}}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/ngodat0103/se347-backend/user-svc
      - name: Clone the repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: Build and push
        uses: docker/build-push-action@v6.9.0
        id: docker_build
        with:
          context: ${{inputs.SERVICE_NAME}}
          push: true
          tags: ${{steps.meta.outputs.tags}}-staging-${{github.sha}}
          cache-from: type=gha
          cache-to: type=gha,mode=max,compression=gzip,compression-level=0
          build-args: |
            SERVICE_NAME=user-svc
            SERVICE_PORT=5000
            VERSION=staging-${{github.sha}}
  deploy:
    name: Deploy to Staging in Kubernetes
    environment: staging
    runs-on: staging-k8s
    needs: build-and-push
    steps:
      - name: Check the kubectl is installed
        run: kubectl version --client
      - name: Check Helm is installed
        run: helm version

      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: Deploy to Kubernetes
        working-directory: .github/deployment/kubernetes/helm/${{inputs.SERVICE_NAME}}
        run: |-
           helm upgrade --values=staging.yaml --atomic --wait --timeout=300s user-svc --set secretStores.vault.server=${{secrets.VAULT_ADDR}} \
           --create-namespace --atomic --namespace se347-staging --set image.tag=dev-staging-${{github.sha}} .

